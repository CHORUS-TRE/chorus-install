keycloak:
  nameOverride: keycloak
  namespaceOverride: keycloak

  auth:
    existingSecret: keycloak-secret
    passwordSecretKey: adminPassword

  tls:
    enabled: true
    autoGenerated: false

    existingSecret: keycloak-tls-secret

  production: true

  # See: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  resourcesPreset: small # default

  ingress:
    enabled: true

    servicePort: https
    hostname: auth.build-t.chorus-tre.ch

    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

  adminIngress:
    # It works without it.
    enabled: false

  # Metrics will be exposed and fetched on the HTTP endpoint.
  metrics:
    enabled: true

    serviceMonitor:
      enabled: true
      port: http

      endpoints:
        # This endpoint doesn't exist.
        #- path: '{{ include "keycloak.httpPath" . }}metrics'
        - path: '{{ include "keycloak.httpPath" . }}realms/{{ .Values.adminRealm }}/metrics'
          # Our custom realm
        - path: '{{ include "keycloak.httpPath" . }}realms/build/metrics'

  postgresql:
    enabled: false

  externalDatabase:
    host: chorus-build-t-keycloak-db-postgresql
    port: 5432
    user: keycloak
    database: keycloak
    existingSecret: keycloak-db-secret
    existingSecretPasswordKey: password

  logging:
    output: json

certificate:
  enabled: true

  secretName: keycloak-tls-secret

  issuerRef:
    kind: ClusterIssuer
    name: private-ca-cluster-issuer
